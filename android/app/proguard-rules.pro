# Flutter-specific rules
-keep class io.flutter.app.** { *; }
-keep class io.flutter.plugin.** { *; }
-keep class io.flutter.util.** { *; }
-keep class io.flutter.view.** { *; }
-keep class io.flutter.** { *; }
-keep class io.flutter.plugins.** { *; }
-keep class okhttp3.** { *; }
-keep class retrofit2.** { *; }

# Suppress Unsafe warnings for Firebase and Google Play Services
# These warnings are generated by Firebase libraries using low-level operations
-dontwarn sun.misc.Unsafe
-dontwarn com.google.firebase.**
-dontwarn com.google.android.gms.**

# Suppress specific Unsafe method warnings that are commonly used by Firebase
-assumenosideeffects class sun.misc.Unsafe {
    public void putObject(java.lang.Object, long, java.lang.Object);
    public java.lang.Object getObject(java.lang.Object, long);
    public int getInt(java.lang.Object, long);
    public void putInt(java.lang.Object, long, int);
    public long getLong(java.lang.Object, long);
    public void putLong(java.lang.Object, long, long);
    public boolean compareAndSwapObject(java.lang.Object, long, java.lang.Object, java.lang.Object);
    public boolean compareAndSwapInt(java.lang.Object, long, int, int);
    public boolean compareAndSwapLong(java.lang.Object, long, long, long);
    public java.lang.Object getObjectVolatile(java.lang.Object, long);
    public void putObjectVolatile(java.lang.Object, long, java.lang.Object);
    public int getIntVolatile(java.lang.Object, long);
    public void putIntVolatile(java.lang.Object, long, int);
    public long getLongVolatile(java.lang.Object, long);
    public void putLongVolatile(java.lang.Object, long, long);
}

# Suppress warnings for libcore.io.Memory which is used by Firebase
-dontwarn libcore.io.Memory
-assumenosideeffects class libcore.io.Memory {
    public static void pokeByte(long, byte);
    public static byte peekByte(long);
}

# Suppress warnings for BlockGuard and CloseGuard used by Firebase
-dontwarn dalvik.system.BlockGuard
-dontwarn dalvik.system.BlockGuard$Policy
-dontwarn dalvik.system.CloseGuard

# Suppress warnings for Android hidden APIs used by Firebase
-dontwarn android.security.NetworkSecurityPolicy
-dontwarn com.android.org.conscrypt.**

# Keep Firebase Crashlytics and related classes
-keep class com.google.firebase.crashlytics.** { *; }
-keep class com.google.firebase.crash.** { *; }

# Keep Firebase Performance Monitoring
-keep class com.google.firebase.perf.** { *; }

# Keep Firebase Remote Config
-keep class com.google.firebase.remoteconfig.** { *; }

# Keep Firebase Analytics
-keep class com.google.firebase.analytics.** { *; }

# Keep Google Play Services
-keep class com.google.android.gms.** { *; }

# Suppress warnings for ECParameterSpec reflection used by Firebase
-dontwarn java.security.spec.ECParameterSpec
-dontwarn sun.security.ec.ECParameters

# Suppress warnings for hidden field access in Socket
-dontwarn java.net.Socket
-dontwarn java.net.SocketImpl

# Suppress warnings for CloseGuard methods
-dontwarn dalvik.system.CloseGuard
-assumenosideeffects class dalvik.system.CloseGuard {
    public static dalvik.system.CloseGuard get();
    public void open(java.lang.String);
    public void close();
}

# Suppress warnings for BlockGuard methods
-dontwarn dalvik.system.BlockGuard
-assumenosideeffects class dalvik.system.BlockGuard {
    public static dalvik.system.BlockGuard$Policy getThreadPolicy();
    public void onNetwork();
}

# Suppress warnings for NetworkSecurityConfig
-dontwarn android.security.NetworkSecurityPolicy
-assumenosideeffects class android.security.NetworkSecurityPolicy {
    public static boolean isCleartextTrafficPermitted(java.lang.String);
}

# Suppress warnings for ProviderInstaller
-dontwarn com.google.android.gms.security.ProviderInstaller
-dontwarn com.google.android.gms.providerinstaller.**

# Suppress warnings for DynamiteModule
-dontwarn com.google.android.gms.dynamite.DynamiteModule
-dontwarn com.google.android.gms.dynamite.descriptors.**