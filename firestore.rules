rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Check if user has admin role
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'admin', 'superadmin', 'administrator'];
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow write: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId) && 
        (isAdmin() || !('role' in request.resource.data));
    }
    
    // Rules for subcollections of a user
    match /users/{userId}/{collection}/{document=**} {
      allow read, write: if isAuthenticated() && (isOwner(userId) || isAdmin());
    }
    
    // Rules for the 'tasks' collection - FIXED
    match /tasks/{taskId} {
      // Allow admins to read all tasks, users to read their own tasks
      allow read: if isAuthenticated() && (
        isAdmin() || 
        resource.data.createdBy == request.auth.uid
      );
      
      // Allow admins to write all tasks, users to create their own tasks
      allow write: if isAuthenticated() && (
        isAdmin() ||
        request.resource.data.createdBy == request.auth.uid
      );
      
      // Specific create rules
      allow create: if isAuthenticated() && (
        isAdmin() ||
        request.resource.data.createdBy == request.auth.uid
      );
      
      // Specific update rules  
      allow update: if isAuthenticated() && (
        isAdmin() ||
        resource.data.createdBy == request.auth.uid
      );
      
      // Specific delete rules
      allow delete: if isAuthenticated() && (
        isAdmin() ||
        resource.data.createdBy == request.auth.uid
      );
    }
    
    // Rules for other collections
    match /user_settings/{userId} {
      allow read, write: if isAuthenticated() && (isOwner(userId) || isAdmin());
    }
    
    match /admins/{adminId} {
      allow read, write: if isAdmin();
    }
    
    match /dashboard_metrics/{metricId} {
      allow read, write: if isAdmin();
    }
    
    match /conversations/{conversationId} {
      allow read, write: if isAuthenticated();
    }
    
    match /news/{newsId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Health check collection
    match /_health_check/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}